import { GoalStatus } from "@elizaos/core"
import { GlacierDBDatabaseAdapter } from "./index"

const testEmbedding384 = [-0.03447720780968666, 0.031023189425468445, 0.006734968163073063, 0.026108965277671814, -0.03936200961470604, -0.16030250489711761, 0.06692398339509964, -0.006441503297537565, -0.04745056480169296, 0.01475883275270462, 0.07087529450654984, 0.05552752688527107, 0.019193390384316444, -0.02625136449933052, -0.010109519585967064, -0.026940489187836647, 0.022307420149445534, -0.02222667634487152, -0.1496926099061966, -0.017493052408099174, 0.007676300592720509, 0.0543522909283638, 0.003254413604736328, 0.03172589838504791, -0.08462141454219818, -0.02940593846142292, 0.051595620810985565, 0.04812408983707428, -0.0033147926442325115, -0.05827922001481056, 0.04196929559111595, 0.022210679948329926, 0.128188818693161, -0.022338949143886566, -0.01165617723017931, 0.06292834132909775, -0.03287629783153534, -0.09122606366872787, -0.031175434589385986, 0.05269956961274147, 0.04703488573431969, -0.08420296758413315, -0.03005615621805191, -0.02074475772678852, 0.009517762809991837, -0.0037217452190816402, 0.007343300152570009, 0.0393243283033371, 0.0932740643620491, -0.0037885825149714947, -0.05274207890033722, -0.05805819481611252, -0.00686437776312232, 0.005283236503601074, 0.0828929990530014, 0.01936277002096176, 0.006284536328166723, -0.010330773890018463, 0.009032350964844227, -0.03768378496170044, -0.04520608112215996, 0.024016303941607475, -0.006944162305444479, 0.013491612859070301, 0.10005495697259903, -0.0716838464140892, -0.021695049479603767, 0.03161855414509773, -0.05163462832570076, -0.08224780112504959, -0.06569326668977737, -0.00989535916596651, 0.0058163832873106, 0.07355457544326782, -0.03405030071735382, 0.024886058643460274, 0.014488058164715767, 0.026457352563738823, 0.009656746871769428, 0.030217278748750687, 0.052803948521614075, -0.07535989582538605, 0.009897238574922085, 0.029836753383278847, 0.017555642873048782, 0.02309202216565609, 0.0019338642014190555, 0.0014001154340803623, -0.04717595875263214, -0.011194364167749882, -0.1142013743519783, -0.019812028855085373, 0.04026619344949722, 0.0021929950453341007, -0.07979220896959305, -0.025382330641150475, 0.09448301792144775, -0.028981106355786324, -0.14500249922275543, 0.23097746074199677, 0.027731142938137054, 0.032111454755067825, 0.03106500208377838, 0.04283284768462181, 0.0642378106713295, 0.032163143157958984, -0.004876692779362202, 0.05569944530725479, -0.03753241151571274, -0.021505575627088547, -0.02834266424179077, -0.02884695865213871, 0.03835305571556091, -0.017468679696321487, 0.05248531699180603, -0.07487607002258301, -0.031259723007678986, 0.02184157259762287, -0.0398956760764122, -0.008587086573243141, 0.026956621557474136, -0.048495497554540634, 0.011469900608062744, 0.029618212953209877, -0.020572209730744362, 0.01310387346893549, 0.028833461925387383, -3.194199452164203e-33, 0.064782053232193, -0.01813022419810295, 0.051789961755275726, 0.12198278307914734, 0.028780169785022736, 0.008722025901079178, -0.07052118331193924, -0.016907211393117905, 0.04073970019817352, 0.042116209864616394, 0.025447171181440353, 0.0357462577521801, -0.049144770950078964, 0.002128997351974249, -0.015546576119959354, 0.05073058605194092, -0.04818530008196831, 0.03588065132498741, -0.004067084286361933, 0.10172469913959503, -0.05597000941634178, -0.010680988430976868, 0.011235813610255718, 0.09068649262189865, 0.004234399646520615, 0.03513867408037186, -0.009702769108116627, -0.09386515617370605, 0.09285558015108109, 0.008004964329302311, -0.007705390453338623, -0.05208669230341911, -0.012588032521307468, 0.003266900544986129, 0.006013575941324234, 0.007581568323075771, 0.010517152957618237, -0.08634553849697113, -0.06987880170345306, -0.002533900085836649, -0.09097657352685928, 0.046887341886758804, 0.05207647755742073, 0.00719385826960206, 0.010903636924922466, -0.005229514557868242, 0.013937341049313545, 0.02196834608912468, 0.03420859947800636, 0.060224711894989014, 0.00011663910117931664, 0.014731970615684986, -0.07008925825357437, 0.028498981148004532, -0.027601683512330055, 0.010768418200314045, 0.03483090549707413, -0.02248791605234146, 0.009769072756171227, 0.07722779363393784, 0.021588383242487907, 0.11495620012283325, -0.06800118833780289, 0.023760981857776642, -0.015983909368515015, -0.017826935276389122, 0.06439487636089325, 0.03202570974826813, 0.05027024820446968, -0.005913708824664354, -0.033708009868860245, 0.017840281128883362, 0.016573399305343628, 0.0632965937256813, 0.03467718884348869, 0.04647350683808327, 0.0979062020778656, -0.006635500583797693, 0.025206975638866425, -0.07798828929662704, 0.016926391050219536, -0.000945780542679131, 0.022471904754638672, -0.038253236562013626, 0.09570479393005371, -0.005350773688405752, 0.010469098575413227, -0.11524055153131485, -0.013262560591101646, -0.010709336027503014, -0.08311730623245239, 0.07327355444431305, 0.049392253160476685, -0.00899436604231596, -0.09584557265043259, 3.366148194408595e-33, 0.12493180483579636, 0.01934967003762722, -0.058225732296705246, -0.035988230258226395, -0.05074670538306236, -0.045662373304367065, -0.08260343223810196, 0.14819474518299103, -0.08842112123966217, 0.06027444452047348, 0.051030177623033524, 0.010303081944584846, 0.14121419191360474, 0.030813857913017273, 0.061033036559820175, -0.05285126343369484, 0.13664887845516205, 0.009189904667437077, -0.017325235530734062, -0.012848662212491035, -0.007995330728590488, -0.050980094820261, -0.05235067382454872, 0.00759299797937274, -0.015166225843131542, 0.016960352659225464, 0.021270500496029854, 0.020558008924126625, -0.12002810835838318, 0.01446185540407896, 0.026759913191199303, 0.025330595672130585, -0.0427546389400959, 0.0067685442045331, -0.0144585520029068, 0.04526202753186226, -0.09147650003433228, -0.019439173862338066, -0.01783345639705658, -0.05491020157933235, -0.052641142159700394, -0.010459044016897678, -0.05201606824994087, 0.020892051979899406, -0.0799703299999237, -0.012111274525523186, -0.05773146077990532, 0.02317827008664608, -0.008031693287193775, -0.02598929964005947, -0.07995666563510895, -0.020728912204504013, 0.0488177053630352, -0.020389236509799957, -0.04917655140161514, 0.014159644953906536, -0.06362207233905792, -0.007807403802871704, 0.016431445255875587, -0.02568252570927143, 0.013381082564592361, 0.026248764246702194, 0.009978353045880795, 0.06322889029979706, 0.002672170288860798, -0.006582772359251976, 0.016631975769996643, 0.032366491854190826, 0.037942495197057724, -0.03637606278061867, -0.006910881493240595, 0.0001596381771378219, -0.0016335458494722843, -0.027278229594230652, -0.02803809382021427, 0.04968152195215225, -0.028867129236459732, -0.0024180489126592875, 0.014774874784052372, 0.009764589369297028, 0.005797587800770998, 0.013486083596944809, 0.005567862652242184, 0.03722711279988289, 0.0072325668297708035, 0.04015622287988663, 0.08150326460599899, 0.07199166715145111, -0.013056171126663685, -0.042882002890110016, -0.011011198163032532, 0.00489784823730588, -0.009229728952050209, 0.035191476345062256, -0.05103504657745361, -1.571437735492509e-8, -0.08862446248531342, 0.023909341543912888, -0.01623874343931675, 0.03170044720172882, 0.02728419192135334, 0.052468761801719666, -0.04707091674208641, -0.05884743854403496, -0.0632081925868988, 0.040888622403144836, 0.049827978014945984, 0.1065516471862793, -0.0745023787021637, -0.012495425529778004, 0.018370673060417175, 0.03947409987449646, -0.024797946214675903, 0.014516249299049377, -0.03706922009587288, 0.020015710964798927, -0.00004859472028329037, 0.009866531006991863, 0.024838769808411598, -0.05245816707611084, 0.029314173385500908, -0.08719190955162048, -0.01449977234005928, 0.026019027456641197, -0.01874639093875885, -0.07620516419410706, 0.03504331782460213, 0.10363952815532684, -0.028050528839230537, 0.012718246318399906, -0.07632547616958618, -0.018652407452464104, 0.024976696819067, 0.08144543319940567, 0.06875887513160706, -0.06405667960643768, -0.08389387279748917, 0.06136239692568779, -0.033545538783073425, -0.10615334659814835, -0.04008052870631218, 0.03253019601106644, 0.07662485539913177, -0.07301611453294754, 0.0003375422675162554, -0.04087165370583534, -0.0757884606719017, 0.027527639642357826, 0.0746254250407219, 0.017717309296131134, 0.09121847152709961, 0.11022014915943146, 0.0005698265158571303, 0.051463354378938675, -0.014551346190273762, 0.033232007175683975, 0.023792309686541557, -0.022889835759997368, 0.03893749788403511, 0.030206849798560143]

async function main() {
    const adapter = new GlacierDBDatabaseAdapter({
        endpoint: 'https://greenfield.onebitdev.com/glacier-gateway/',
        namespace: 'elizademo',
        dataset: 'demo2',
        privateKey: '0x4eba9156493bb84f988c9ec0765b28063841bfcb434a3a55b07409cb1237697f', // DEMO 0xad205E45C6531321dc50D1CB3f36DF3F4FAA4554
    })
    //     await adapter.initOnce()

    await adapter.createAccount({
        id: "00000000-0000-0000-0000-000000000001",
        name: 'Alice',
        username: 'alice',
        email: 'alice@glacier.io',
        avatarUrl: '',
    })
    await adapter.createAccount({
        id: "00000000-0000-0000-0000-000000000002",
        name: 'Bob',
        username: 'bob',
        email: 'bob@glacier.io',
        avatarUrl: '',
    })
    await adapter.createRelationship({
        userA: "00000000-0000-0000-0000-000000000001",
        userB: "00000000-0000-0000-0000-000000000002",
    })

    await adapter.createRoom("00000000-0000-0000-0000-000000000001")
    await adapter.createGoal({
        id: "00000000-0000-0000-0000-000000000001",
        name: "Goal 1",
        roomId: "00000000-0000-0000-0000-000000000001",
        userId: "00000000-0000-0000-0000-000000000001",
        status: GoalStatus.IN_PROGRESS,
        objectives: [],
    })
    await adapter.createMemory({
        id: "00000000-0000-0000-0000-000000000001",
        roomId: "00000000-0000-0000-0000-000000000001",
        userId: "00000000-0000-0000-0000-000000000001",
        agentId: "00000000-0000-0000-0000-000000000001",
        content: {
            text: "Hello, world!",
        },
        embedding: testEmbedding384,
        createdAt: Date.now(),
    }, "memories")

    const account = await adapter.getAccountById("00000000-0000-0000-0000-000000000001")
    console.log(`account: ${JSON.stringify(account)}`)

    const rela = await adapter.getRelationship({
        userA: "00000000-0000-0000-0000-000000000001",
        userB: "00000000-0000-0000-0000-000000000002",
    })
    console.log(`getRelationship: ${JSON.stringify(rela)}`)

    const goal = await adapter.getGoals({
        roomId: "00000000-0000-0000-0000-000000000001",
        userId: "00000000-0000-0000-0000-000000000001",
    })
    console.log(`getGoals: ${JSON.stringify(goal)}`)

    await adapter.setCache({
        key: "test",
        agentId: "00000000-0000-0000-0000-000000000001",
        value: "test",
    })
    const cacheValue = await adapter.getCache({
        key: "test",
        agentId: "00000000-0000-0000-0000-000000000001",
    })
    console.log(`getCache: ${cacheValue}`)

    let memories = await adapter.searchMemories({
        tableName: "memories",
        agentId: "00000000-0000-0000-0000-000000000001",
        roomId: "00000000-0000-0000-0000-000000000001",
        embedding: testEmbedding384,
        match_threshold: 0.5,
        match_count: 10,
        unique: true,
    })

    console.log(`memories: ${JSON.stringify(memories)}`)
    memories = await adapter.getMemories({
        roomId: "00000000-0000-0000-0000-000000000001",
        tableName: "memories",
        agentId: "00000000-0000-0000-0000-000000000001",
    })
    console.log(`memories: ${JSON.stringify(memories)}`)

    memories = await adapter.getMemoriesByRoomIds({
        roomIds: ["00000000-0000-0000-0000-000000000001"],
        agentId: "00000000-0000-0000-0000-000000000001",
        tableName: "memories",
    })

    console.log(`memories: ${JSON.stringify(memories)}`)

    const memory = await adapter.getMemoryById("00000000-0000-0000-0000-000000000001")
    console.log(`memory: ${JSON.stringify(memory)}`)

    await adapter.addParticipant("00000000-0000-0000-0000-000000000001", "00000000-0000-0000-0000-000000000001")
    const actor = await adapter.getActorById({
        roomId: "00000000-0000-0000-0000-000000000001",
    })
    console.log(`actor: ${JSON.stringify(actor)}`)
    const detail = await adapter.getActorDetails({
        roomId: "00000000-0000-0000-0000-000000000001",
    })
    console.log(`detail: ${JSON.stringify(detail)}`)

    await adapter.setParticipantUserState("00000000-0000-0000-0000-000000000001", "00000000-0000-0000-0000-000000000001", "FOLLOWED")


    const participant = await adapter.getParticipantsForAccount("00000000-0000-0000-0000-000000000001")
    console.log(`participant: ${JSON.stringify(participant)}`)
    const state = await adapter.getParticipantUserState("00000000-0000-0000-0000-000000000001", "00000000-0000-0000-0000-000000000001")
    console.log(`state: ${state}`)
    const participatns = await adapter.getParticipantsForRoom("00000000-0000-0000-0000-000000000001")
    console.log(`participatns: ${JSON.stringify(participatns)}`)
    let rooms = await adapter.getRoomsForParticipant("00000000-0000-0000-0000-000000000001")
    console.log(`rooms: ${JSON.stringify(rooms)}`)
    rooms = await adapter.getRoomsForParticipants(["00000000-0000-0000-0000-000000000001"])
    console.log(`rooms: ${JSON.stringify(rooms)}`)

    await adapter.updateGoalStatus({
        goalId: "00000000-0000-0000-0000-000000000001",
        status: GoalStatus.DONE,
    })

    await adapter.updateGoal({
        id: "00000000-0000-0000-0000-000000000001",
        name: "Goal 1",
        roomId: "00000000-0000-0000-0000-000000000001",
        userId: "00000000-0000-0000-0000-000000000001",
        status: GoalStatus.IN_PROGRESS,
        objectives: [],
    })

    let goals = await adapter.getGoals({
        roomId: "00000000-0000-0000-0000-000000000001",
        userId: "00000000-0000-0000-0000-000000000001",
    })
    console.log(`goals: ${JSON.stringify(goals)}`)

    await adapter.removeAllGoals("00000000-0000-0000-0000-000000000001")
    goals = await adapter.getGoals({
        roomId: "00000000-0000-0000-0000-000000000001",
        userId: "00000000-0000-0000-0000-000000000001",
    })
    console.log(`goals: ${JSON.stringify(goals)}`)

    await adapter.removeAllMemories("00000000-0000-0000-0000-000000000001", "memories")
    await adapter.removeMemory("00000000-0000-0000-0000-000000000001", "memories")
    await adapter.removeGoal("00000000-0000-0000-0000-000000000001")
    await adapter.removeRoom("00000000-0000-0000-0000-000000000001")
    await adapter.removeParticipant("00000000-0000-0000-0000-000000000001", "00000000-0000-0000-0000-000000000001")
    await adapter.cleanup()
}

main().then(console.log)
